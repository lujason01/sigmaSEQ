# SigmaSEQ R Package CI/CD Workflow
# Comprehensive testing for R Shiny bioinformatics application

name: R CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R ${{ matrix.config.r }})
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: '4.4.3'}
          - {os: macos-latest, r: '4.4.3'}
          - {os: windows-latest, r: '4.4.3'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libcairo2-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev

      - name: Install R dependencies
        run: |
          # Install basic dependencies
          install.packages(c("remotes", "rcmdcheck", "BiocManager", "sessioninfo"), repos = "https://cloud.r-project.org/")
          
          # Set Bioconductor version for R 4.4.3
          BiocManager::install(version = "3.19", ask = FALSE, update = FALSE)
          
          # Install Bioconductor packages with error handling
          tryCatch({
            BiocManager::install(c(
              "Biobase", "GEOquery", "limma", "DESeq2", "edgeR", 
              "clusterProfiler", "enrichplot", "pathview", 
              "ReactomePA", "DOSE", "org.Hs.eg.db"
            ), ask = FALSE, update = FALSE, force = TRUE)
          }, error = function(e) {
            message("Error installing Bioconductor packages: ", e$message)
            # Try installing core packages only
            BiocManager::install(c("Biobase", "GEOquery", "limma"), ask = FALSE, update = FALSE)
          })
          
          # Install package dependencies
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check package
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _R_CHECK_FORCE_SUGGESTS_: false
        run: |
          options(crayon.enabled = TRUE)
          # Use less strict checking for Shiny applications
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--no-build-vignettes", "--ignore-vignettes"), 
            error_on = "error", 
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## This only works if testthat is being used
          find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
